paths:
  /endpoints/sip:
    get:
      operationId: list_endpoints_sip
      summary: List SIP endpoints
      description: '**Required ACL:** `confd.endpoints.sip.read`'
      tags:
      - endpoints
      - sip
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: SIP endpoint list
          schema:
            $ref: '#/definitions/EndpointSipItems'
    post:
      operationId: create_endpoint_sip
      summary: Create SIP endpoint
      description: '**Required ACL:** `confd.endpoints.sip.create`'
      tags:
      - endpoints
      - sip
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - name: body
        in: body
        description: SIP Endpoint to create
        required: false
        schema:
          $ref: '#/definitions/EndpointSip'
      responses:
        '201':
          description: SIP endpoint created
          schema:
            $ref: '#/definitions/EndpointSip'
        '400':
          $ref: '#/responses/CreateError'
  /endpoints/sip/{sip_id}:
    get:
      operationId: get_endpoint_sip
      summary: Get SIP Endpoint
      description: '**Required ACL:** `confd.endpoints.sip.{sip_id}.read`'
      tags:
      - endpoints
      - sip
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/sipid'
      responses:
        '200':
          description: SIP Endpoint
          schema:
            $ref: '#/definitions/EndpointSip'
        '404':
          $ref: '#/responses/NotFoundError'
    put:
      operationId: update_endpoint_sip
      summary: Update SIP Endpoint
      description: '**Required ACL:** `confd.endpoints.sip.{sip_id}.update`'
      tags:
      - endpoints
      - sip
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/sipid'
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/EndpointSip'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
    delete:
      operationId: delete_endpoint_sip
      summary: Delete SIP Endpoint
      description: '**Required ACL:** `confd.endpoints.sip.{sip_id}.delete`'
      tags:
      - endpoints
      - sip
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/sipid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'

parameters:
  sipid:
    required: true
    type: integer
    name: sip_id
    in: path

definitions:
  EndpointSip:
    title: SIP Endpoint
    allOf:
    - $ref: '#/definitions/EndpointSipRelationBase'
    - properties:
        tenant_uuid:
          type: string
          description: The UUID of the tenant
          readOnly: true
        secret:
          type: string
          description: SIP secret/password
          default: autogenerated
        type:
          type: string
          enum:
          - friend
          - peer
          - user
          default: friend
          description: Type of SIP account
        host:
          type: string
          description: Hosts that are allowed to use this SIP account
          default: dynamic
        options:
          description: |
            Advanced configuration: options. Options are appended at the end of a SIP account in the file 'sip.conf' used by asterisk. Please consult the asterisk documentation for further details on available parameters. Because of database limitations, the following options can only be configured once:

            * md5secret
            * language
            * accountcode
            * amaflags
            * allowtransfer
            * fromuser
            * fromdomain
            * subscribemwi
            * buggymwi
            * call-limit
            * callerid
            * fullname
            * cid_number
            * maxcallbitrate
            * insecure
            * nat
            * promiscredir
            * usereqphone
            * videosupport
            * trustrpid
            * sendrpid
            * allowsubscribe
            * allowoverlap
            * dtmfmode
            * rfc2833compensate
            * qualify
            * g726nonstandard
            * disallow
            * allow
            * autoframing
            * mohinterpret
            * useclientcode
            * progressinband
            * t38pt_udptl
            * t38pt_usertpsource
            * rtptimeout
            * rtpholdtimeout
            * rtpkeepalive
            * deny
            * permit
            * defaultip
            * port
            * regexten
            * subscribecontext
            * vmexten
            * callingpres
            * parkinglot
            * protocol
            * outboundproxy
            * transport
            * remotesecret
            * directmedia
            * callcounter
            * busylevel
            * ignoresdpversion
            * session-timers
            * session-expires
            * session-minse
            * session-refresher
            * callbackextension
            * timert1
            * timerb
            * qualifyfreq
            * contactpermit
            * contactdeny
            * unsolicited_mailbox
            * use_q850_reason
            * encryption
            * snom_aoc_enabled
            * maxforwards
            * disallowed_methods
            * textsupport

            Any other options may be repeated as many times as needed. Options must have the following form:
            ```
            {
              "options": [
                 ["name1", "value1"],
                 ["name2", "value2"]
              ]
            }
            ```

            The resulting configuration in sip.conf will have the following form:
            ```
            [sipusername]
            context=default
            secret=sipsecret
            name1=value1
            name2=value2
            ```
          type: array
          items:
            $ref: '#/definitions/KeyValueOption'
          default: []
    - $ref: '#/definitions/EndpointRelationTrunk'
    - $ref: '#/definitions/EndpointRelationLine'
  EndpointSipRelationBase:
    properties:
      id:
        type: integer
        description: SIP Endpoint ID
        readOnly: true
      name:
        type: string
        descrition: The name of the SIP user
        default: username if specified or autogenerated
      username:
        type: string
        description: SIP username
        default: autogenerated
  EndpointSipItems:
    title: SIP Endpoints
    properties:
      items:
        items:
          $ref: '#/definitions/EndpointSip'
        type: array
      total:
        type: integer
