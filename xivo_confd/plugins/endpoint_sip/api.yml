paths:
  /endpoints/sip:
    get:
      operationId: list_endpoints_sip
      summary: List SIP endpoints
      description: '**Required ACL:** `confd.endpoints.sip.read`'
      tags:
      - endpoints
      - sip
      parameters:
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: SIP endpoint list
          schema:
            $ref: '#/definitions/EndpointSipItems'
    post:
      operationId: create_endpoint_sip
      summary: Create SIP endpoint
      description: '**Required ACL:** `confd.endpoints.sip.create`'
      tags:
      - endpoints
      - sip
      parameters:
      - name: body
        in: body
        description: SIP Endpoint to create
        required: false
        schema:
          $ref: '#/definitions/EndpointSip'
      responses:
        '201':
          description: SIP endpoint created
          schema:
            $ref: '#/definitions/EndpointSip'
        '400':
          $ref: '#/responses/CreateError'
  /endpoints/sip/{sip_id}:
    get:
      operationId: get_endpoint_sip
      summary: Get SIP Endpoint
      description: '**Required ACL:** `confd.endpoints.sip.{sip_id}.read`'
      tags:
      - endpoints
      - sip
      parameters:
      - $ref: '#/parameters/sipid'
      responses:
        '200':
          description: SIP Endpoint
          schema:
            $ref: '#/definitions/EndpointSip'
        '404':
          $ref: '#/responses/NotFoundError'
    put:
      operationId: update_endpoint_sip
      summary: Update SIP Endpoint
      description: '**Required ACL:** `confd.endpoints.sip.{sip_id}.update`'
      tags:
      - endpoints
      - sip
      parameters:
      - $ref: '#/parameters/sipid'
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/EndpointSip'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
    delete:
      operationId: delete_endpoint_sip
      summary: Delete SIP Endpoint
      description: '**Required ACL:** `confd.endpoints.sip.{sip_id}.delete`'
      tags:
      - endpoints
      - sip
      parameters:
      - $ref: '#/parameters/sipid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'

parameters:
  sipid:
    required: true
    type: integer
    name: sip_id
    in: path

definitions:
  EndpointSip:
    title: SIP Endpoint
    allOf:
    - $ref: '#/definitions/EndpointSipRelationBase'
    - properties:
        secret:
          type: string
          description: SIP secret/password
          default: autogenerated
        type:
          type: string
          enum:
          - friend
          - peer
          - user
          default: friend
          description: Type of SIP account
        host:
          type: string
          description: Hosts that are allowed to use this SIP account
          default: dynamic
        options:
          description: "Advanced configuration options. Options are appended at the\
            \ end of a \nSIP account in the file 'sip.conf' used by asterisk.\nPlease\
            \ consult the asterisk documentation for further details on available\n\
            parameters. Because of database limitations, the following options can\
            \ only be configured once:\n\n * md5secret\n * language\n * accountcode\n\
            \ * amaflags\n * allowtransfer\n * fromuser\n * fromdomain\n * subscribemwi\n\
            \ * buggymwi\n * call-limit\n * callerid\n * fullname\n * cid_number\n\
            \ * maxcallbitrate\n * insecure\n * nat\n * promiscredir\n * usereqphone\n\
            \ * videosupport\n * trustrpid\n * sendrpid\n * allowsubscribe\n * allowoverlap\n\
            \ * dtmfmode\n * rfc2833compensate\n * qualify\n * g726nonstandard\n *\
            \ disallow\n * allow\n * autoframing\n * mohinterpret\n * useclientcode\n\
            \ * progressinband\n * t38pt_udptl\n * t38pt_usertpsource\n * rtptimeout\n\
            \ * rtpholdtimeout\n * rtpkeepalive\n * deny\n * permit\n * defaultip\n\
            \ * port\n * regexten\n * subscribecontext\n * vmexten\n\
            \ * callingpres\n *\
            \ parkinglot\n * protocol\n * outboundproxy\n * transport\n * remotesecret\n\
            \ * directmedia\n * callcounter\n * busylevel\n * ignoresdpversion\n *\
            \ session-timers\n * session-expires\n * session-minse\n * session-refresher\n\
            \ * callbackextension\n * timert1\n * timerb\n * qualifyfreq\n * contactpermit\n\
            \ * contactdeny\n * unsolicited_mailbox\n * use_q850_reason\n * encryption\n\
            \ * snom_aoc_enabled\n * maxforwards\n * disallowed_methods\n * textsupport\n\
            \nAny other options may be repeated as many times as needed. Options must\
            \ have the following form:\n\n```\n{\n  \"options\": [\n    [\"name1\"\
            , \"value1\"],\n    [\"name2\", \"value2\"]\n  ]\n}\n```\n\nThe resulting\
            \ configuration in sip.conf will have the following form:\n\n```\n[sipusername]\n\
            context=default\nsecret=sipsecret\nname1=value1\nname2=value2\n```\n"
          type: array
          items:
            $ref: '#/definitions/KeyValueOption'
          default: []
    - $ref: '#/definitions/EndpointRelationTrunk'
    - $ref: '#/definitions/EndpointRelationLine'
  EndpointSipRelationBase:
    properties:
      id:
        type: integer
        description: SIP Endpoint ID
        readOnly: true
      username:
        type: string
        description: SIP username
        default: autogenerated
  EndpointSipItems:
    title: SIP Endpoints
    properties:
      items:
        items:
          $ref: '#/definitions/EndpointSip'
        type: array
      total:
        type: integer
